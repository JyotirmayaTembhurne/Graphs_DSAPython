visited = set()
low, disc = dict(), dict()
time = 0
aps = set()

graph = {
    0: [1, 2],
    1: [0, 2],
    2: [0, 1, 3],
    3: [2],
}
n = 4


def DFS(node, parent, time):
    visited.add(node)
    low[node] = disc[node] = time
    time += 1
    for nei in graph[node]:
        if nei == parent:
            continue
        if nei not in visited:
            DFS(nei, node, time)
            low[node] = min(low[node], low[nei])
            if low[nei] >= disc[node] and node != 0:
                aps.add(node)
        else:
            low[node] = min(low[node], disc[nei])


for i in range(n):
    if i not in visited:
        DFS(i, None, time)

print(aps)
