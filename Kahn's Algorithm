class Graph:
    def __init__(self, vertices) -> None:
        self.vert = vertices
        self.indegree = [0] * vertices
        self.graph = dict()
        for i in range(self.vert):
            self.graph[i] = []

    def AddEdge(self, u, v):
        if u in self.graph.keys() and v < self.vert:
            self.graph[u].append(v)
            self.indegree[v] += 1

    def TopoSort(self, start):
        result = list()
        queue = [start]
        while queue:
            current = queue.pop(0)
            result.append(current)
            for neighbour in self.graph[current]:
                self.indegree[neighbour] -= 1
                if self.indegree[neighbour] == 0:
                    queue.append(neighbour)
        if len(result) != self.vert:
            return -1
        return result
